Start: 21November2024

IntelliJ Idea IDE for Java (Arch Linux):
https://archlinux.org/packages/extra/x86_64/intellij-idea-community-edition/
https://www.jetbrains.com/help/idea/installation-guide.html
Has code highlighting, showing realtime errors, and suggestions, realtime compile,

$ sudo pacman -Syyu #Update system
   sudo pacman -S libseccomp #missing dependancies
   export PKG_CONFIG_PATH=/usr/lib/pkgconfig:$PKG_CONFIG_PATH #had to install, after this, makepkg worked
sudo pacman -S snapd #install snapd, didn't work, had to do the 'makepkg' below
git clone https://aur.archlinux.org/snapd.git
cd snapd
makepkg -si
sudo systemctl enable --now snapd.socket 
sudo systemctl enable --now snapd.apparmor.service
sudo ln -s /var/lib/snapd/snap /snap
sudo snap install intellij-idea-community --classic #will install the new intelliJ IDE on Arch
 
When creating a project, you will select a 'JDK' or java development kit,
Select Version '17' (current is 23.0.1) - since '17' is the one with long term support
Next is the vendor, the company which provides the SDK 'Amazon Coretto 17.0.13' and 'Location'

7:16 = Starting Project ================================================================================================================================================
Name = 'Pascal Case' Every word should start with a capital letter 
Left hand side - 'Project Pane' - After creating a project you will see 'src' 'main' this is a class, double click to open, 
'System.out.println("i = " + i);' #will have the system print line 'println' of the current count
'System.out.println("Hello World");' #hello world, semi colons are important in Java, not optional - will open console and output text, also you need '"' double quotation marks for text, not single
IntelliJ has pretty good code completion out the box, tab to complete
'Ctrl' + 'Shift' + 'F10' = To run our code, 2 ways, right click the class/code 'Run "Main.main()"' or click the arrow on top right hand side of IDE
Function = collection of code together to do a specific task

13:30 = Keywords Expalained =============================================================================================================================================
public class Main { #'public' is a keyword that is an 'access modifier' which will be publicly accessible - 'class' every function you use in Java must be part of a class - 'Main' the class '{' block of code
    public static void main(String[] args) { #'void' signifies the return type of the function (void returns nothing), 'main' is the name of the function(entry point of app)'(String[] args)' #these are the parameters
      System.out.println("Hello World"); #simple statement, the code that gets executed from the 'main' function
All code created in Java must be part of a class, most of the code you are going to write is going to come from the 'main' function
Parameters are what inputs will be taken

20:15 = Variables ========================================================================================================================================================
Variables = used to store data
String name = "Sean"; #has type safety, will only be able to save a string in the "" double quotation marks for the variable 'name'
int age = 33; #'int' integer, for the variable 'age'



















































