Building an instagram clone :
Features = Follow/Unfollow/Edit Profile/Profile Image/Resize Images/Add New Post/Captions/Add Images/Logout/Users/Authentication/Register Users/Usernames
Laravel - PHP = The fastest growing PHP framework to date, #1 framework in github, easy for newcomers, powerful

PHP-Laravel Installer:
https://laravel.com/docs/5.0/installation
  1) Install Composer:
  https://getcomposer.org/
  https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md
  2)Install Laravel:
  composer global require "laravel/installer=~1.1"

Project Requires: PHP >8.2, node.js, npm, laravel - took hours to install on ubuntu, had to add laravel to $PATH in usr/bin/
Project created in var/wwww/html/laravelapp

How to Start a project:
https://laravel.com/docs/10.x/installation
composer global require laravel/installer
laravel new example-app
cd example-app
php artisan serve #Once you have started the Artisan development server, your application will be accessible in your web browser at http://localhost:8000
php artisan serve --host=_your_ip_address --port=8000 #You can explicitly define the host and the port with artisan serve command
php artisan serve --host=0.0.0.0 --port=8000 #place "0.0.0.0" at your host option and it will work without set any firewall or any extra. 
sudo ufw allow 8000 #allow open port for firewall
#use below in root directory of project to update before being able to host:
composer install --ignore-platform-reqs
composer update --ignore-platform-reqs

(5:30) First look at the project=============================================================================================================================================================================
After installing(finally) the first you notice is ALOT of files, don't worry about these, over time this becomes second nature to you and you know exactly where to find everything
composer.json = will hold all of your files assets, unlike the dependancy manager composer, this file is for instructseans

(7:15) Intro to php artisan==================================================================================================================================================================================
artisan = a command line tool that ships with laravel that allows you to do many things with your application, you can interact with your entire laravel application through artisan with tinker
always ensure you are in the correct directory
php artisan #lists all commands you can use in artisan, 'available commands' are unique to artisan, other commands are universal
things like authorization are why you use a framework, to speed up development, instead of rebuilding things you don't need 
php artisan serve #starts up the built in laravel PHP server, when you start in the terminal- you can then view all the requests made to the server, terminal must continue to run in the background

(11:42) Generating login flow with make:auth=================================================================================================================================================================
HTML = root directory -> resources -> views -> welcome.blade.php 
  blade is a rendering template that allows you throw in snippets of php in your views
your views will primarily be composed of HTML markup, there is no reason you should ever be computing or fetching database queries in your view - that's what controllers are for
php artisan make:auth #Laravel ships with an authentication system that allows you to register users, it allows you to log in and keeps track of all your sessions out of the box
  in Laravel 6.0 php artisan make:auth no longer exists, solution run:
  composer require laravel/ui
  php artisan ui:auth
  you can also generate the views only with:
  php artisan ui:auth -views
After using the above commands, you will have set up a login and register feature to your laravel project-quick and easy

(12:04) Setting Up the Front End with Node and NPM============================================================================================================================================================
First we need to fix the views
The Javascript portion of laravel is found in welcome.blade.php / home.blade.php
Laravel is a full development framework - has a frontend and backend - ships with a working implementation of twitter bootstrap, and view.js - although you still do need to run a compilation
to get view.js we need to use node pack manager(npm) in terminal
front end = everything that a user can physically touch, when user clicks something, it goes to the backend, backend will do something and return it to the frontend
If you're familiar with react/jquery or anything like that, you can rip everything out, switch out of view and start over with them or any other JS framework





































