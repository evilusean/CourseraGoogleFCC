Start : 20April2025
0:30 - Introduction to PostgreSQL ============================================================================================================================================================
PostGreSQL = Open sourced relational DB systems, robust, advanced, versatile, reliable, extensibile, scalable.
RDBMS = Relational DataBase Management System 
ACID = Atomicity, Consistency, Isolation, Durability - Compliance
pgAdmin = A free open source administration and development platform for managing PostgreSQL Databases.
  It provides a GUI(Graphical User Interface) - that allows the user to intecat with the databases and perform various administrative tasks. Works on Multiple OS's
  Allows you to : DB Manage(create tables/views/indexs), Query, Edit data, monitor DB activity, manage server settings 
  Allows you to visually design database schemas, write and execute SQL queries -

4:30 - Installing PostgreSQL and pgAdmin Steps : =============================================================================================================================================
Step 1) Download and Install PostgreSQL (Escape canada) 
  # Install PostgreSQL
  sudo pacman -S postgresql
  # Initialize the database cluster
  sudo mkdir -p /var/lib/postgres/data
  sudo chown -R postgres:postgres /var/lib/postgres/
  sudo -u postgres initdb -D /var/lib/postgres/data
  # Start and enable PostgreSQL
  sudo systemctl enable postgresql
  sudo systemctl start postgresql
Step 2) Install pgAdmin : https://www.pgadmin.org/ 
  #Let's clear out PostgreSQL and pgAdmin4 sessions and set up a fresh installation. Here's the step-by-step process:
  #Remove existing sessions and configurations:
    # Remove pgAdmin4 configurations
    rm -rf ~/.config/pgadmin4
    rm -rf ~/.pgadmin
    # Remove PostgreSQL session data
    sudo rm -rf /var/lib/postgres/data/*
  #Create required directories for pgAdmin4:
    sudo mkdir -p /var/lib/pgadmin
    sudo mkdir -p /var/log/pgadmin
    sudo chown $USER /var/lib/pgadmin
    sudo chown $USER /var/log/pgadmin
  # Initialize PostgreSQL
    sudo -u postgres initdb -D /var/lib/postgres/data
  # Start PostgreSQL service
    sudo systemctl enable postgresql
    sudo systemctl start postgresql
  # Set up Python virtual environment for pgAdmin4: 
    # Create and navigate to venv directory
      mkdir ~/pgadmin4-venv
      cd ~/pgadmin4-venv
  # Create virtual environment
    python -m venv pgadmin4env
  # Activate virtual environment
    source pgadmin4env/bin/activate
  # Install pgAdmin4
    pip install pgadmin4 gevent
  # Create a Startup Script :
    #!/bin/bash
    cd ~/pgadmin4-venv
    source pgadmin4env/bin/activate
    pgadmin4
  # Make it executable and add an alias: 
    # Make executable
    chmod +x ~/pgadmin4-venv/start-pgadmin.sh
    # Add alias to shell config
    echo 'alias pgadmin4-web="~/pgadmin4-venv/start-pgadmin.sh"' >> ~/.zshrc
    source ~/.zshrc
  # Switch to postgres user
    sudo -u postgres psql
    # In PostgreSQL shell:
    CREATE USER archsean WITH PASSWORD 'yourpassword' SUPERUSER;
    CREATE DATABASE archseandb OWNER archsean;
    \q
#That fix, took me like 3 hours to get. Basically, create a venv with python, and run it from there :
Start pgAdmin4: 'pgadmin4-web' #afterwards, enter the email/password you initialized, start the web app from the script
#so, for some reason, it won't run from terminal, you need to create a venv in python, download it there, and then run it from there, you initialize with an email/pw and use that for login
  Saved the entire process here for future Sean, in case I need to do it again, there is also a docker image you can download, some pRedditors said it was better for running a postgreSQL.yaml
Step 3) Download 'dvdrental.tar' - It's a .tar file, a compressed version of a database, DO NOT OPEN, added a .gitignore so it won't get auto uploaded to github when I PUSH ON SAVE
  https://www.postgresqltutorial.com/wp-content/uploads/2019/05/dvdrental.zip
Step 4) Reset Computer - 
Step 5) Restore The Database (Ignore Failed Exit Code if it appears)
Step 6) Uninstall pgAdmin4 (It's installed Twice)
Step 7) Run the Second install of pgAdmin4 as administrator(sudo)
  Create a Master PW (This is where it broke for me last time, I have never had to do this again, just initialize an email)

14:30 - Connect to pgAdmin Server -> Create/build/Restore new DB ===============================================================================================================================
To create a new database in pgAdmin4, you first need to establish a connection to a PostgreSQL server. Here's what you need to do:
- In pgAdmin4, right-click on "Servers" in the browser tree
- Select "Register" â†’ "Server"
- In the dialog that appears:
- On the "General" tab:
- Give your server a name (e.g., "LocalPostgres")
- On the "Connection" tab:
- Host: localhost (if running locally)
- Port: 5432 (default PostgreSQL port)
- Username: your PostgreSQL username (default is often postgres)
- Password: your PostgreSQL password
After establishing a connection, you can now create a new PostgreSQL DB :
- Right Click on the connected Server -> Create -> Database (name the new DB 'dvd-rental')
- Right Click 'dvd-rental' DB -> 'Restore' -> Reference the 'dvdrental.tar' file downloaded previously
  I couldn't find it, I guess it is only on the venv, thankfully, you can upload it, just do that, 
- Right Click on 'dvdrental' DB -> 'Refresh'
- Right Click DB -> 'Query Tool' #Allows you to Query and Test DB
  'SELECT * FROM film' #basic query to test DB

17:13 - SELECT statement =======================================================================================================================================================================
Select Statement = used to retireve data from one or more DB tables. It allows you to specify the columns you want to retrieve, the tables to retrieve and any conditions to be met
'SELECT <column_name> FROM <table_name>' #basic SELECT statement syntax
'SELECT <column1>, <column2> FROM <table_name> #syntax for selecting multiple columns
'SELECT * FROM <table_name>' #syntax for retrieving all columns in a table
  Best practice is to avoid using the asterisk, because it pulls alot of data, causing a slow DB
'DB' -> 'Schemas' -> 'Tables' to view the layout of your DB
Right Clink on DB you want to Query -> 'Query Tool' = How to write all queries using pgAdmin4
apparently the 'SELECT' and 'FROM' SQL query keywords aren't case sensitive, and can be upper/lower case, I've been using SQL for years and didn't know that, it is convention though. 

26:25 - SELECT challenge tasks =================================================================================================================================================================
Business Situation : See the date of existing customers - Use a SELECT statement to grab the customer id of every customer the payment date and the amount
'SELECT customer_id, amount, payment_date from payment;' # query that completes the above criteria
SQL returns the data in the most efficient way, you need to use an ORDER BY statement to sort it

31:15 - SELECT DISTINCT ========================================================================================================================================================================








































