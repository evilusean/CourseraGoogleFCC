Bootstrap will figure out how wide your screen is and respond by resizing your HTML elements - hence the name responsive design.
With responsive design, there is no need to design a mobile version of your website. It will look good on devices with screens of any width.
You can add Bootstrap to any app by adding the following code to the top of your HTML:
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" 
integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous"/>

Make Images Mobile Responsive
First, add a new image below the existing one. Set its src attribute to https://cdn.freecodecamp.org/curriculum/cat-photo-app/running-cats.jpg.
It would be great if this image could be exactly the width of our phone's screen.
Fortunately, with Bootstrap, all we need to do is add the img-responsive class to your image.

Create a Bootstrap Button
Bootstrap has its own styles for button elements, which look much better than the plain HTML ones.
Create a new button element below your large kitten photo. Give it the btn and btn-default classes, as well as the text of Like.
<button class="btn btn-default">Like</button> 
Normally, your button elements with the btn and btn-default classes are only as wide as the text that they contain.
By making them block elements with the additional class of btn-block, your button will stretch to fill your page's entire horizontal space and any 
elements following it will flow onto a "new line" below the block.
<button class="btn btn-default btn-block">Submit</button>
The btn-primary class is the main color you'll use in your app. It is useful for highlighting actions you want your user to take.

Call out Optional Actions with btn-info
Bootstrap comes with several pre-defined colors for buttons. The btn-info class is used to call attention to optional actions that the user can take.

Warn Your Users of a Dangerous Action with btn-danger
Bootstrap comes with several pre-defined colors for buttons. The btn-danger class is the button color you'll use to notify users that the button performs a
destructive action, such as deleting a cat photo.
Create a button with the text Delete and give it the class btn-danger.

Use the Bootstrap Grid to Put Elements Side By Side
Bootstrap uses a responsive 12-column grid system, which makes it easy to put elements into rows and specify each element's relative width.
Most of Bootstrap's classes can be applied to a div element.
Bootstrap has different column width attributes that it uses depending on how wide the user's screen is. For example, phones have narrow screens,
and laptops have wider screens.
Take for example Bootstrap's col-md-* class. Here, md means medium, and * is a number specifying how many columns wide the element should be. 
In this case, the column width of an element on a medium-sized screen, such as a laptop, is being specified.
In the Cat Photo App that we're building, we'll use col-xs-*, where xs means extra small (like an extra-small mobile phone screen),
and * is the number of columns specifying how many columns wide the element should be.

Use a span to Target Inline Elements
You can use spans to create inline elements. Remember when we used the btn-block class to make the button fill the entire row?
That illustrates the difference between an "inline" element and a "block" element.
By using the inline span element, you can put several elements on the same line, and even style different parts of the same line differently.
Using a span element, nest the word love inside the p element that currently has the text Things cats love. 
Then give the span the class text-danger to make the text red.
Here's how you would do this for the p element that has the text Top 3 things cats hate:
<p>Top 3 things cats <span class="text-danger">hate:</span></p>

Add Font Awesome Icons to our Buttons
Font Awesome is a convenient library of icons. These icons can be webfonts or vector graphics. 
\These icons are treated just like fonts. You can specify their size using pixels, and they will assume the font size of their parent HTML elements.
You can include Font Awesome in any app by adding the following code to the top of your HTML:
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" 
integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">
In this case, we've already added it for you to this page behind the scenes.
The i element was originally used to make other elements italic, but is now commonly used for icons. 
You can add the Font Awesome classes to the i element to turn it into an icon, for example:
<i class="fas fa-info-circle"></i>
Note that the span element is also acceptable for use with icons.

Create Bootstrap Wells
Bootstrap has a class called well that can create a visual sense of depth for your columns.
Nest one div element with the class well within each of your col-xs-6 div elements.

Create a Class to Target with jQuery Selectors
Not every class needs to have corresponding CSS. Sometimes we create classes just for the purpose of selecting these elements more easily using jQuery.
Give Each Element a Unique id
We will also want to be able to use jQuery to target each button by its unique id.
Give each of your buttons a unique id, starting with target1 and ending with target6.

Add id Attributes to Bootstrap Elements
Recall that in addition to class attributes, you can give each of your elements an id attribute.
Each id must be unique to a specific element and used only once per page.
<div class="well" id="center-well">










