Step 1
Welcome to the first part of the Accessibility Quiz. As you are becoming a seasoned HTML and CSS developer, we have started you off with the basic boilerplate.
Start this accessibility journey by providing a lang attribute to your html element. This will assist screen readers in identifying the language of the page.

Step 2
You may be familiar with the meta element already; it is used to specify information about the page, such as the title, description, keywords, and author.
Give your page a meta element with an appropriate charset value.
The charset attribute specifies the character encoding of the page, and, nowadays, UTF-8 is the only encoding supported by most browsers.

Step 3
Continuing with the meta elements, a viewport definition tells the browser how to render the page. 
Including one betters visual accessibility on mobile, and improves SEO (search engine optimization).
Add a viewport definition with a content attribute detailing the width and initial-scale of the page.

Step 4
Another important meta element for accessibility and SEO is the description definition. 
The value of the content attribute is used by search engines to provide a description of your page.
Add a meta element with the name attribute set to description, and give it a useful content attribute.

Step 5
Lastly in the head, the title element is useful for screen readers to understand the content of a page. Furthermore, it is an important part of SEO.
Give your page a title that is descriptive and concise.

Step 6
Navigation is a core part of accessibility, and screen readers rely on you to provide the structure of your page.
This is accomplished with semantic HTML elements.
Add a header and a main element to your page.
The header element will be used to introduce the page, as well as provide a navigation menu.
The main element will contain the core content of your page.

Step 7
Within the header, provide context about the page by nesting one img, h1, and nav element.
The img should point to https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg, and have an id of logo.
The h1 should contain the text HTML/CSS Quiz.

Step 8
A useful property of an SVG (scalable vector graphics) is that it contains a path attribute 
which allows the image to be scaled without affecting the resolution of the resultant image.
Currently, the img is assuming its default size, which is too large. CSS has a max function which returns the largest of a set of comma-separated values. For example:
img {
  width: max(250px, 25vw);
}
In this example, img elements will have a minimum width of 250px. And as the viewport grows, the image will grow accordingly to be 25 percent of the viewport width.
Scale the image using its id as a selector, and setting the width to be the maximum of 100px or 18vw.

Step 9
As described in the freeCodeCamp Style Guide, the logo should retain an aspect ratio of 35 / 4, and have padding around the text.
First, change the background-color to #0a0a23 so you can see the logo. Then, use the aspect-ratio property to set the desired aspect ratio to 35 / 4. 
Finally, add a padding of 0.4rem all around.

Step 10
Make the header take up the full width of its parent container, set its height to 50px, and set the background-color to #1b1b32. Then, set the display to use Flexbox.






























