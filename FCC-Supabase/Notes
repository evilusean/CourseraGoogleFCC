Start : 05May2025

0:40 - Intro ===================================================================================================================================================================================
Supabase = Powerful Free Open Source Alternative to Google's Firebase (It's PostgreSQL) - Can build modern, secure webapps with SupaBase - Realtime DB's, API's, Supabase Auth(SDK)
  Create Tables(SQL, Policies, Row-Level Security), Notificiation System, Storage System, One Click BackEnd-As-A-Service(fast), Email Templates, User Management/Recover Password, 
  Read/Insert/Delete, Subscriptions, Relations(DB), Functions, Schemas, Storage, Logs, Extensions, Realtime, Edge-Functions, Webhooks

4:15 - Create A Project ========================================================================================================================================================================
https://supabase.com/
Free Tier = Totally free to start (up to 500mb of DB & 1GB of file storage) - 2GB of bandwith - 0Auth Providers - 50,000 monthly users - up to 50MB file uploads - 500K edge function invokes
PostgreSQL Edge Functions allow you to run an application on the backend 
'Instant API' - The Supabase Documentation generates the code you need for the front end with an SDK/API for each function you might want to use
Top Left Corner on Supabase.com -> Click 'Start Your Project'(or Sign In) -> Head to Dashboard -> Create an OrganizASean 
Create Project (Max of 2 Projects on Free Tier) -> Select an OrganizASean -> Create a DB PW(a5-Can be Generated + Copy and Paste) -> Region -> Create
Left Hand Side(after project is created) on Dashboard = Gives you a Table/SQL editor, DB, Auth, Storage, Edge Functions, Reports, Logs, API Docs, Settings
https://supabase.com/docs
SQL Editor = Scripts for 'Create Table'(in PostgreSQL) 'Add Column' and more, there are 'Quick Start' Scripts that will set up very difficult parts for you, like :
  'Slack Clone'(with Row Level Security & all policies required), 'To Do App',  'User Management Starter'
Authentication Providers = A supa long list(heh), with all the big names like google, github, email, apple, phone, linkedin*ptuh*, FB, twitter, twitch, etc, etc - this is supa useful(heh)
  Famous Last Words : "I'll just roll my own Auth"
Email Templates = For Signup, Invite, Magic Link, Change Email PW, Reset Password
Storage = Assets (Images, Documents, Whatever)
Edge Functions = Similar to Server Actions
Reports = Backend Reports for your 5 daily users
Logs = Not just for lumberjacks, saves all the stuff you need to run your API
API Docs = Tells you how to run the API

15:55 - Tables ==================================================================================================================================================================================
Supabase works with PostgreSQL - In PostgreSQL each DB has many tables - To work with tables in Supabase use the dashboard 'Table Editor' on the left hand side
When you first open the 'Table Editor' on the left hand side there is a 'schema' dropdown : Auth, extensions, graphql, public, realtime, storage, vault
'New Table' -> Select a 'Name', RLS(Row Level Security) is enabled by default, 'Policies' (needed to query data if using RLS), 'RealTime', 
  Each table is just a row and columns, 'Columns'(id, primary key, datatypes, all that good stuff), and 'Foreign Keys'
Best practice is to write in 'Snake Case' snake_case is a naming convention where words are separated by underscores and all letters are lowercase
'import data via spreadsheet' option as well, if you already have a table format figured out, you can import it into supabase
Create Table 'clients'
He changes the 'id' from an 'int8' to a 'uuid' (universally unique identifier = random numbers)
'created_at' is a 'timestamp' function 'now()' that will just take the datetime of when a client was created/added for the default value
add a column 'email' Type 'text' - since you do not want a client without an email click the 'settings' next to the column and select 'Is Nullable' and uncheck it, 
  check 'Is Unique' so you don't have different clients with the same email
When you create a table, it isn't final, you can insert/add rows and columns after it is created
You can 'Refresh' just a table, sort, filter, all using supabase instead of writing queries, you can use the GUI dashboard in your browser
Create Table 'orders' with 'id' = 'uuid', 'generate_random' + 'created_at' = 'timestamp', 'now()' + 'client_id' = 'uuid', <foreign key>, not nullable + 'price' = 'numeric' + 'address' = 'text'

30:40 - RLS(Row Level Security) =================================================================================================================================================================
RLS - Allows Usage of DB using policies, the user has to configure all the access by writing security policies to the tables, allows you to choose who writes and reads what rows on a table
To Create a new policy : 'Authentication' (left hand side) -> 'Policies'





















































