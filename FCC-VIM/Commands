Motion Commands : Are shortcuts triggered in Normal mode that allow you to quickly move around your document with preceision
  '<#>g' = go to line number <#>
  'w' = go to start of next word
  'b' = move backward a word
Operator Commands: can be used with motion commands:
  'c' = change
  'd' = delete
  'y' = yank (copy)
  '~' = swap case (only if 'tildeop' is set
  'g~' = swap case
  'gu' = make lowercase
  'gq' = text formatting
  '>' = shift right
  '<' = shift left
Examples:
  'd' + 'w' = delete the current word
  'c' + '3" + 'w' = change three words
Directional Motions: 
  'h' = right
  'j' = down 
  'k' = up
  'l' = right
Examples: 
  '10' + 'h' = move 10 characters left
  '25' + 'j' = move down 25 lines

GoTo Motions : Will go to a specific line
  'gg' = go to first line
  'G' = go to the last line
  '22' + 'gg' = go to the 22nd line from the top
  '22' + 'G' = same as above, will go to line 22, using shift 'G' instead of 'gg'
  'gt' = go one tab up
  'gT' = go down one tab

Word Motions : 
  'w' = move to the start of the next word
  'e' = move to the end of the word (will next if already there)
  'b' = moves to the start of the last word
Join Lines: 
  'J' = will join the bottom line with the current line
  '10' + 'J' = Will join the bottom ten lines with the current line
Start or End of Line : (Similar to RegEx with '$' and '^')
  '$' = go to end of line, will remain on the end of line when moving with 'hjkl' movement - sticky positioning
  '^' = go to start of line , will remain on the start of line when moving with 'hjkl' movement - default positioning
Replace Command : Allows you to write overtop of existing characters
  'r' = replace a single character
  'R' = enter Replace Mode, everything typed will replace current text
Undo and Redo Commands : 
  'u' = will undo a text change
  'U' = undo an entire line,
  'Ctrl' + 'r' = Redo - will redo something
Change Command : A way of selecting and then deleting an amount of text based on word motions, will put you in insert mode after deleting
  'c' = change
  'C' = change to end of line (COL), will remove everything from where you are to end of line and put you in insert mode
  'c' + 'w" = change to end of word
  'c' + 'e' = change to end of last word
  'C' + 'gg' = change from here to the first line
  'c' + '2' + 'e' = c2e - will change the next 2 words, will remove everything from where you are and next 2 words and put you in insert mode
  'c' + '5' + 'j" = c5j - will change the next 5 lines from where you are, remove everything and put you in insert mode
Delete Command : Whatever you delete will be placed into the clipboard(unnamed register), so whenever you paste, it will paste what was deleted
  'd' + 'w' = delete from the current cursor to the start of the next word
  'd' + 5 + 'w' = delete the next 5 words
  2 + 'd' + 'w' = delete from the current cursor to start of the next word
  'dd' = delete the current line
  'D' = Delete to end of line (EOL)
  5 + 'dd' = delete five lines
  'x' = delete currently selected character
  4 + 'x' = delete next 4 characters
  'Shift' + P = Paste what is in clipboard(different than control+shift+V)
Yank and Paste Commands : 
  'y' = Will Copy text into the unnamed register(different than 'Ctrl' + 'Shift' + 'V'
  'yw' = yank current word
  'yy' = yank a line
  'Y' = yank current line
  'p' = Paste before(below)
  'P' = Paste after(above)
Insert and Append Commands :
  'i' = will enter insert mode, to the left of the cursor box, allowing you to add text to the document
  'I' = will enter Insert mode, at the start of the line
  'a' = append, will enter insert mode to the right of the cursor
  'A' = Append, at the end of the line, will enter insert mode at end of line
Line Insert Command : Allows you to quickly create a new line above or below the current line and enter insert mode
  'o' = create the new line below and enter insert mode
  'O' = create the new line above and enter insert mode 

Vim Modes : 
  Normal Mode = Default Mode, you can always return to default mode by pressing 'esc', 
  Command Line Mode : 
    ':' any time you type a colon it will be followed by a command
    '/' = Search forwards, will search the rest of your code
    '?' = Search Backwards, will search previous code for what follows '?'
  Insert Mode :
    'i' = will insert at cursor
    'I' = will insert at start of line
    'a' = insert at after current character
    'A' = Insert at end of Line
    'o' = open below
    'O' = Open above
    'c' = change*
    'C' = change at end of the line
    'c' + 'w' = change word
  Visual Mode : 'V' has two modes, visual line mode and visual mode
    'V' = Visual Mode
    'V' = Visual Line Mode
    'Ctrl' + 'V' = Visual Block Mode - A way of selecting text and doing something with that text
  Replace Mode : 
    'r' = replace a character(exits mode immediately)
    'R' = Replace mode, but will stay in it as you replace multiple characters

File Commands : Most file commands are entered via the command line and start with ':'
  ':w' = write file(save) 
  ':w <filename>' = write file at this <filename> path (save new file)
  ':w!' = attempt to force the file to save(useful for read-only files)
  ':wa' = save all files
  ':q' = quit
  ':q!' = quit force - quit without saving changes
  'qa' = quit all open files
  'Z' = quit(can be used without colon or command line mode)


Switching Tabs(useful for VS code extension/vimium for chromium/neovim and vim)
  'g' + 't' = move forward 1 tab
  'g' + 'T' = move backwards 1 tab
    If you have a lot of tabs open and want to switch between them quickly, you can use the gt and gT commands. 
    The gt command will move the cursor to the next tab in the list, while the gT command will move the cursor to the previous tab.
    You can also use a number before the gt or gT command to move to a specific tab. For example, 2gt will move the cursor to the second tab in the list.
  'x' = Will close current tab
  'Shift' + 'Z' (x2) = Tap Twice, will close current tab in vscode (x doesn't work in VSCode)
  ':tabnext'To switch to the next tab in Vim, press the :tabnext command. This will move the cursor to the next tab in the list.
  ':tabn <number>' If you want to switch to a specific tab, you can press :tabn [number], where [number] is the number of the tab you want to switch to. 
    For example, you would press :tabn 3 to switch to the third tab.
  ':tabmove' = Another way to switch tabs in Vim is to use the :tabmove command. This command allows you to move a tab to a different position in the tab list. 
    For example, to move the current tab to the third position, you would press :tabmove 3.
  'Ctrl' + 'e' = in VSCode, this will allow you to search files in your project directory, very quick if you know what to look for (or 'ctrl' + 'p' OR 'ctrl' + 'shift' + F) 

Vimium : Chrome Extension, that allows you to have VIM-like commands to control chrome web-browser
  ?       show the help dialog for a list of all available keys
  h       scroll left
  j       scroll down
  k       scroll up
  l       scroll right
  gg      scroll to top of the page
  G       scroll to bottom of the page
  d       scroll down half a page
  u       scroll up half a page
  f       open a link in the current tab
  F       open a link in a new tab
  r       reload
  gs      view source
  i       enter insert mode -- all commands will be ignored until you hit Esc to exit
  yy      copy the current url to the clipboard
  yf      copy a link url to the clipboard
  gf      cycle forward to the next frame
  gF      focus the main/top frame
Vimium Tabs:
  J, gT   go one tab left
  K, gt   go one tab right
  g0      go to the first tab. Use ng0 to go to n-th tab
  g$      go to the last tab
  ^       visit the previously-visited tab
  t       create tab
  yt      duplicate current tab
  x       close current tab
  X       restore closed tab (i.e. unwind the 'x' command)
  T       search through your open tabs
  W       move current tab to new window
  <a-p>   pin/unpin current tab
