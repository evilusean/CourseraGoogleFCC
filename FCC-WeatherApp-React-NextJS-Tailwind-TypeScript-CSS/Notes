(0:00:13) Introduction =============================================================================================================================================================================================================
Responsive, dynamic app with react components
https://www.youtube.com/watch?v=KkC_wYM_Co4&ab_channel=freeCodeCamp.org
OpenWeatherAPI: 
https://openweathermap.org/api 
Repo:
https://github.com/whoisseth/weather-app-nextjs
Next.js:
https://nextjs.org/docs
Next.js interactive tutorial:
https://nextjs.org/learn
Next.js is a React framework for building full-stack web applications. You use React Components to build user interfaces, and Next.js for additional features and optimizations.
Under the hood, Next.js also abstracts and automatically configures tooling needed for React, like bundling, compiling, and more. This allows you to focus on building your application instead of spending time with configuration.

Features:
API, Next JS(React Framework), Todays Weather(3 hour intervals), Weekly Forecast, Weather Description(Visibility, Humidity, Wind Speed, Air Pressure, Sunrise time, Sunset time)
  weekly forecast, search function, current location, fully responsive

(0:03:45) Install/Remove boilerplate=================================================================================================================================================================================================
npx create-next-app@latest weatherapp #use nextjs to install with node, created our first nextJS project
Typescript = Yes, ESLint = yes, Tailwind CSS = Yes, src/directory = yes, app router = yes, import alias = no
367 dependancies installed, no errors
cd weatherapp #change directory to newly created nextJS app
code . #opens our current directory in VSCode
npm run dev #test our new app, it works, localhost:3000
removed everything from page.tsx, and globals.css 

07:33 Creating and styling the navigation component==================================================================================================================================================================================
created 'components' file in src / app , created Navbar.tsx
<nav className='shadow-sm sticky top-0 left-0 z-50 bg-white'> #added shadow, sticky to top, positioned at top left, and a background of white
<div className="h-[80px] w-full flex justify-between items-center max-w-7x1 px-3 mx-auto"> #created a duv with height of 80px, width=full, flex, justify between, items center, max width 7x1, padding=3, margin x of auto
  mx-auto #margin x auto, will automatically center your container on the x axis
<p className="flex items-center justify-center gap-2"></p> #added a paragraph with flex, items-center, justify content center, gap-2 Use gap-{size} to change the gap between both rows and columns in grid and flexbox layouts.
<h2 className="text-gray-500 text-3x1"> #added header tag with gray text, and text size of 3x1
import Navbar from "./components/Navbar"; #added our Navbar to our page.tsx with an import statement
<div className="flex flex-col gap-4 bg-gray-100 min-h-screen"> #gave our background a gray background, flex display, flex of column, minimum height of the screen
For Our Logo(Sun)-we will need icons, we can get icons for our projects here:
https://react-icons.github.io/react-icons/
Ctrl + Shift + `(backtick) = open a new terminal window in VSCode
npm install react-icons --save #installs react-icons in your project, you can now use them, use the website search feature above to find your icon you wish to use
After installing react-icons through the terminal, search through what you need for your project in top left search function
import { BiSolidSun } from "react-icons/bi"; #sun we selected
<BiSolidSun /> #How we can add sun to our project, after importing it
After placing it, we now need to style our new icon,
<BiSolidSun className="text-3x1 mt-1 text-yellow-500"/>
I can already tell our font-size is way too small, but it seems to scale with whatever I place in the navbar div, staying the same, maybe the guy who made tutorial is using a very low res monitor
  will need to come back and fix it after, tailwindCSS for ants, can add font-size in globals.css after we finish building, can keep this for now,
https://v2.tailwindcss.com/docs/font-size
Added 2 more icons for location

22:27 Using event handlers and passing props in React form handling=================================================================================================================================================================
type Props = {
    className?: string;
    value: string;
    onChange:React.ChangeEventHandler<HTMLInputElement> | undefined;
    onSubmit: React.FormEventHandler<HTMLFormElement> | undefined;
}
#The value prop is used to set the value of the input field, the onChange prop is used to handle changes to the input field, and the onSubmit prop is used to handle form submissions.
The SearchBox component returns a form element with an input field and a button. The input field is given the value prop, which sets its value to the current value of the value prop passed to the component. 
The input field is also given the onChange prop, which handles changes to the input field. The button is given the onSubmit prop, which handles form submissions.
When the user enters text into the input field, the onChange prop is called with the new value of the input field. This causes the value prop of the component to be updated, which in turn causes the input
field to be re-rendered with the new value.
the className?:string; #conditional, has a question, sometimes you need a className and sometimes you don't

24:45 Creating the CN function and installing required libraries====================================================================================================================================================================

























