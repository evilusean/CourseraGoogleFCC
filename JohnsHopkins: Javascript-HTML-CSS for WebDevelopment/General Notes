========================================================================================================================Week 1:
HTML5:
Development Environment:
CDT(Chrome Developer Tools)=Come built in with google chrome browser
Install Node.js -> use npm(Node package manager) to install browser sync -> use browsersync/git to push to github
You can use github to host a webpage that you create, and push updates using git
Can be changed in github settings -> Pages 
You can Clone(Copy) an entire github repository in command line using git with url
command line: git status, git add, git commit, git push #all you need to publish code to github for html purposes
browser-sync start --server --directory --files "*" #browser sync used to locally host server mode of the folder you are currently in "*"=everything
browser sync can be used for a realtime update on any html website you are working on, locally hosted on your machine without webserver
  all you need to do is save and it get's updated, don't need to refresh-saves time, good for development
Asking for help: Stack Overflow, jsfiddle.net, codepen.io

HTML=Hyper Text Markup Language
  Hypertext=Text which contains links to other texts
  Markup=To mark something up, to annotate
  Language=Syntax and semantics
    HTML= Strucute, provides the structure for the page
    CSS(Cascading Style Sheets)=Style and colour, layout, and font size
    Javascript=Behaviour, provides functionality to a page
Standards: 1997=HTML4.0 2000=XHTML 1.0 2004=WHATWGHTML 2007=WHATWG+W3C 2011=HTML5
W3C(World Wide Web Consortium)=Created initial standards for HTML 4.0 in 1997

Anatomy of HTML Tag:
Opening Tag=<p>Content="..."</p>=Closing Tag
<>=Tag p=Element
<br>=Line Break Tag <hr>=Horizontal Rule Tag, both of these tags do not have a closing tag
<p id="myId"></p> #tags/elements can have attributes, containing a name:value pair, must be unique
<p/> #self closing tag, for tags that do not contain any content

Basic HTML Document Structure:
<!doctype html> #every html should start with a <!doctype> declaration, tells browser it is rendering an html, or quirks mode
<html> #html tag contains entire html document
<head> #head tag contains items that describe the main content of the page, metadata
  <meta charset="utf-8"> #metatag, encoding, tells the browser how to interpret the characterset, no closing metatag
  <title>Coursera is Cool!</title> #title tag is required, 
</head>
<body> #body tag, root of all content in an HTML page
Coursera is SO cool! I am learning so much!
</body>
</html>

HTML Content Models:
Content Model=Behaviour that the browser applies to the elements, and to their nesting rules, which elements are allowed to be nested
Block-Level Elements=Render to begin on a new line
  May contain inline or block-level elements
  Roughly translate into Flow Content in HTML5
Inline Elements=Render on the same line
  May only contain other inline elements
  Roughly translate into Phrasing Content in HTML5
  
HTML Tags:
Semantic=Relating to meaning in language or logic
Semantic HTML element=Element that implies some meaning to the content
<h1> to <h6>	Defines HTML headings <h1> most important, largest <h6> least important, smallest
<h1> should convey the central topic, important generalized description, may help search ratings, should not be used for styling, just structure
<header> tag conveys some header information about the page,sometimes navigation
<nav> tag conveys navigation/other links
<section> within each <section> tag contains <article>(s)
<article> can also have <sections> within that
<aside> an element that contains something that is in this element that is related to the page, but not the main content
<footer> footer information of the page

Lists:
Allows you to group related content, organizational tool
<ul> unordered list tag, every item in the list is an <li> tag </li> , you can nest lists, lists within lists, appears as bullet points
<ol> ordered list tag, numbered, every item in the list is an <li> tag </li> , you can nest lists, lists within lists, appears as 1. 2. 3.

HTML Character Entity References:
'<' , '>' , '&' are the three characters you should ALWAYS escape, so they don't cause rendering issues
'<' Instead of, use '&lt;'
'>' Instead of, use '&gt;'
'&' Instead of, use '&amp;'
&copy; = â’¸ copyright symbol
&nbsp; = nonbreaking space, text beside will never wrap
&quot; = quote " in case not using UTF-8 encoding, will still appear as "



